\COPY (SELECT product_category, SUM(quantity_ordered * order_amount) AS total_sales FROM short_amazon_sale_report GROUP BY product_category ORDER BY total_sales DESC) TO '/Users/tymoteuszmilek/Documents/postgreSQL_ecommerce/data/returned_data/amazon_sales_by_category.csv' WITH CSV HEADER;

\COPY (SELECT order_date, SUM(quantity_ordered * order_amount) AS total_sales FROM short_amazon_sale_report WHERE order_date <> '2022-06-29' AND order_date <> '2022-04-30' GROUP BY order_date ORDER BY order_date ASC) TO '/Users/tymoteuszmilek/Documents/postgreSQL_ecommerce/data/returned_data/amazon_daily_sales_distribution.csv' WITH CSV HEADER;

\COPY (WITH weekday_sales AS (SELECT EXTRACT(DOW FROM order_date) AS weekday_number, SUM(quantity_ordered * order_amount) AS total_sales FROM short_amazon_sale_report WHERE order_date <> '2022-06-29' AND order_date <> '2022-04-30' GROUP BY EXTRACT(DOW FROM order_date)), weekday_names AS (SELECT weekday_number, CASE WHEN weekday_number = 0 THEN 'Sunday' WHEN weekday_number = 1 THEN 'Monday' WHEN weekday_number = 2 THEN 'Tuesday' WHEN weekday_number = 3 THEN 'Wednesday' WHEN weekday_number = 4 THEN 'Thursday' WHEN weekday_number = 5 THEN 'Friday' WHEN weekday_number = 6 THEN 'Saturday' END AS weekday_name FROM weekday_sales), avg_sales AS (SELECT weekday_number, ROUND(AVG(total_sales), 2) AS avg_sales FROM weekday_sales GROUP BY weekday_number) SELECT weekday_names.weekday_name, avg_sales.avg_sales FROM avg_sales JOIN weekday_names ON avg_sales.weekday_number = weekday_names.weekday_number ORDER BY CASE WHEN weekday_names.weekday_name = 'Monday' THEN 1 WHEN weekday_names.weekday_name = 'Tuesday' THEN 2 WHEN weekday_names.weekday_name = 'Wednesday' THEN 3 WHEN weekday_names.weekday_name = 'Thursday' THEN 4 WHEN weekday_names.weekday_name = 'Friday' THEN 5 WHEN weekday_names.weekday_name = 'Saturday' THEN 6 WHEN weekday_names.weekday_name = 'Sunday' THEN 7 END) TO '/Users/tymoteuszmilek/Documents/postgreSQL_ecommerce/data/returned_data/amazon_weekly_sales_distribution.csv' WITH CSV HEADER;

\COPY (SELECT CASE WHEN is_b2b_customer = 't' THEN 'Business' WHEN is_b2b_customer = 'f' THEN 'Customer' END AS customer_type, SUM(quantity_ordered * order_amount) AS total_sales FROM short_amazon_sale_report GROUP BY is_b2b_customer) TO '/Users/tymoteuszmilek/Documents/postgreSQL_ecommerce/data/returned_data/total_sales_per_customer_type.csv' WITH CSV HEADER;

\COPY (WITH total_orders AS (SELECT COUNT(*) AS total_orders FROM short_amazon_sale_report), status_distribution AS (SELECT order_status, ROUND(CAST(COUNT(*) AS DECIMAL) * 100 / total_orders.total_orders, 3) AS percentage_of_orders FROM short_amazon_sale_report CROSS JOIN total_orders GROUP BY order_status, total_orders.total_orders) SELECT * FROM status_distribution ORDER BY percentage_of_orders DESC) TO '/Users/tymoteuszmilek/Documents/postgreSQL_ecommerce/data/returned_data/order_status_distribution.csv' WITH CSV HEADER;

\COPY (SELECT product_sku, SUM(quantity_ordered) AS total_quantity_sold FROM short_amazon_sale_report GROUP BY product_sku ORDER BY total_quantity_sold DESC LIMIT 10) TO '/Users/tymoteuszmilek/Documents/postgreSQL_ecommerce/data/returned_data/amazon_top_10_skus.csv' WITH CSV HEADER;

\COPY (SELECT product_size, SUM(quantity_ordered * order_amount) AS total_sales FROM short_amazon_sale_report GROUP BY product_size ORDER BY total_sales DESC) TO '/Users/tymoteuszmilek/Documents/postgreSQL_ecommerce/data/returned_data/amazon_total_sales_per_product_size.csv' WITH CSV HEADER;

\COPY (WITH order_data AS (SELECT date, customer, gross_amt, CASE WHEN LAG(customer) OVER(ORDER BY date ASC) = customer THEN 0 ELSE 1 END AS customer_change FROM international_sale_report), indexed_orders AS (SELECT customer, gross_amt, SUM(customer_change) OVER(ORDER BY date ASC) AS order_index FROM order_data), total_gross_amt_per_order AS (SELECT customer, SUM(gross_amt) AS total_gross_amt, order_index FROM indexed_orders GROUP BY customer, order_index) SELECT total_gross_amt FROM total_gross_amt_per_order) TO '/Users/tymoteuszmilek/Documents/postgreSQL_ecommerce/data/returned_data/international_total_spending_per_order_distribution.csv' WITH CSV HEADER;

\COPY (WITH order_data AS (SELECT date, customer, pcs, CASE WHEN LAG(customer) OVER(ORDER BY date ASC) = customer THEN 0 ELSE 1 END AS customer_change FROM international_sale_report), indexed_orders AS (SELECT customer, pcs, SUM(customer_change) OVER(ORDER BY date ASC) AS order_index FROM order_data), total_pcs_per_order AS (SELECT customer, SUM(pcs) AS total_amount, order_index FROM indexed_orders GROUP BY customer, order_index) SELECT CAST(total_amount AS INTEGER) FROM total_pcs_per_order) TO '/Users/tymoteuszmilek/Documents/postgreSQL_ecommerce/data/returned_data/international_total_amount_per_order_distribution.csv' WITH CSV HEADER;

\COPY (WITH avg_price_per_category AS (SELECT product_category, ROUND(AVG(ajo_mrp), 2) AS avg_ajo_mrp, ROUND(AVG(amazon_mrp), 2) AS avg_amazon_mrp, ROUND(AVG(flipkart_mrp), 2) AS avg_flipkart_mrp, ROUND(AVG(limeroad_mrp), 2) AS avg_limeroad_mrp, ROUND(AVG(myntra_mrp), 2) AS avg_myntra_mrp, ROUND(AVG(paytm_mrp), 2) AS avg_paytm_mrp, ROUND(AVG(snapdeal_mrp), 2) AS avg_snapdeal_mrp FROM short_march_2021 GROUP BY product_category) SELECT * FROM avg_price_per_category) TO '/Users/tymoteuszmilek/Documents/postgreSQL_ecommerce/data/returned_data/comparison_of_avg_prices_across_platforms_march_2021.csv' WITH CSV HEADER;
